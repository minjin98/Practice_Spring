[커맨드 객체의 값 검증과 에러 메시지 처리]

import org.springframework.validation.Validator;

(객체를 검증할 때 사용하는 Validator 인터페이스)
public interface Validator {
	boolean supports(Class<?> clazz);
	void validate(@Nullable Object target, Errors errors);
}

boolean supports(Class<?> clazz);
1. Validator가 검증할 수 있는 타입인지 검사

void validate(@Nullable Object target, Errors errors);
1. 파라미터로 전달된 target 객체를 검증하고 오류 검사 결과를 errors에 담는다.


(예제 소스)
1. RegisterRequestValidator.java
	public class RegisterRequestValidator implements Validator {
		@Override
		public boolean supports(Class<?> clazz) {
		}

		@Override
		public void validate(Object target, Errors errors) {	
		}
	}

2. RegisterController.java
	@PostMapping("/register/step3")
	public String handleStep3(RegisterRequest regReq, Errors errors) {
		new RegisterRequestValidator().validate(regReq, errors);
		if (errors.hasErrors()) {
			return "register/step2";
		}
	}

3. step2.jsp
    <form:form action="step3" modelAttribute="registerRequest">
       <form:errors path="email"/>
    </form:form>





